<UserControl x:Class="TogglDesktop.WPF.TimerEditViewController"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:toggl="clr-namespace:TogglDesktop.WPF"
             mc:Ignorable="d" 
             d:DesignWidth="500" Height="60">
    
    <UserControl.Background>
        <ImageBrush ImageSource="/TogglDesktop;component/Resources/timerDarkBg.png"
                    Stretch="None" TileMode="Tile" AlignmentX="Left" AlignmentY="Top"
                    Viewport="0, 0, 634, 822" ViewportUnits="Absolute"/>
    </UserControl.Background>
    
    <UserControl.Resources>

        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="/TogglDesktop;component/Resources/Fonts/#Roboto" />
            <Setter Property="FontSize" Value="16.6" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0, 0, 6, 0"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="toggl:ExtendedTextBox">
            <Setter Property="FontFamily" Value="/TogglDesktop;component/Resources/Fonts/#Roboto" />
            <Setter Property="FontSize" Value="16.6" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0, 0, 6, 0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="CaretBrush" Value="#dddddd"></Setter>
        </Style>
        
        <Style TargetType="ButtonBase">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Border Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="/TogglDesktop;component/Resources/Fonts/#Roboto" />
        </Style>

        <Style TargetType="Button" x:Key="ManualAddButton" BasedOn="{StaticResource {x:Type ButtonBase}}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#999999" />
            <Setter Property="FontSize" Value="16.6" />
            <Setter Property="Padding" Value="30 10" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="#BBBBBB"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style  TargetType="Button" x:Key="RemoveButton" BasedOn="{StaticResource {x:Type ButtonBase}}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/TogglDesktop;component/Resources/ic_cancel_grey600_24dp.png" Stretch="Uniform"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ButtonBase}}">
            <Setter Property="Background" Value="#4dd965"/>
            <Setter Property="FontSize" Value="26.6" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="UltraLight"/>
            <Setter Property="Content" Value="Start"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3eb052"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#ff3d32"/>
                    <Setter Property="Content" Value="Stop"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsChecked" Value="True"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#cf1115"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid Name="manualPanel" x:FieldModifier="private" Visibility="Collapsed">
            <Button Style="{StaticResource ManualAddButton}"
                    Click="onManualAddButtonClick">+ Add time entry</Button>
        </Grid>
        <Grid Name="timerPanel" x:FieldModifier="private"  Visibility="Visible"
    MouseLeftButtonDown="onGridMouseDown" IsHitTestVisible="True" Background="Transparent" KeyDown="onGridKeyDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="84"/>
            </Grid.ColumnDefinitions>




            <!-- description and project-->
            <Grid Grid.Column="1"
            Margin="-20, 4, 0, 4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Name="projectGridRow" x:FieldModifier="private"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Button Name="cancelProjectSelectionButton" x:FieldModifier="private"
                        Style="{StaticResource RemoveButton}"
                        Grid.Row="0" Grid.Column="0"
                        Width="16" Height="16" Padding="2"
                        IsTabStop="False" Click="cancelProjectSelectionButtonClick"/>

                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" MouseLeftButtonDown="onProjectLabelMouseDown">

                    <TextBlock Name="clientLabel" x:FieldModifier="private"
                            Foreground="#dddddd">Client</TextBlock>
                    <TextBlock Name="projectLabel" x:FieldModifier="private"
                        >Project</TextBlock>
                </StackPanel>

                <Grid Grid.Row="1" Grid.Column="1" MouseLeftButtonDown="onDescriptionLabelMouseDown">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Name="taskLabel" x:FieldModifier="private"
                            Foreground="#bbbbbb">Task -</TextBlock>

                    <!-- description placeholder/display -->
                    <TextBlock Grid.Column="1" Name="descriptionLabel" x:FieldModifier="private">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=descriptionTextBox, Path=Text}" Value=""/>
                                            <Condition Binding="{Binding ElementName=descriptionTextBox, Path=IsKeyboardFocused}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
            What are you doing?
                    </TextBlock>

                    <toggl:ExtendedTextBox Grid.Column="1"  x:Name="descriptionTextBox" x:FieldModifier="private"
                                Margin="-2, 0, 6, 0"/>

                </Grid>

                <toggl:AutoCompletionPopup Grid.Row="1" Grid.Column="1"  x:Name="descriptionAutoComplete" x:FieldModifier="private"
                                TextBox="{Binding ElementName=descriptionTextBox}"
                                EmptyText="No previous entries found." StaysOpen="False"
                                ConfirmCompletion="descriptionAutoComplete_OnConfirmCompletion"/>
            </Grid>

            <!-- billable, tags -->
            <StackPanel Grid.Column="2" Name="iconPanel" x:FieldModifier="private"
                    Orientation="Horizontal" HorizontalAlignment="Right">

                <Image Name="tagsIcon" Source="/TogglDesktop;component/Resources/icon-tags.png"
                    Stretch="UniformToFill" Margin="3, 0, 3, 0" Height="16"/>
                <Image Name="billabeIcon" Source="/TogglDesktop;component/Resources/icon-billable.png"
                    Stretch="UniformToFill" Margin="3, 0, 3, 0" Height="20"/>

            </StackPanel>

            <!-- time placeholder/display -->
            <TextBlock Grid.Column="3" Name="durationLabel" x:FieldModifier="private"
                FontSize="25" HorizontalAlignment="Right" FontWeight="UltraLight"
                MouseLeftButtonDown="onTimeLabelMouseDown">
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=durationTextBox, Path=Text}" Value=""/>
                                    <Condition Binding="{Binding ElementName=durationTextBox, Path=IsKeyboardFocused}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
        00:00:00
            </TextBlock>

            <!-- time textbox -->
            <toggl:ExtendedTextBox Grid.Column="3" x:Name="durationTextBox" x:FieldModifier="private"
                FontSize="25" HorizontalContentAlignment="Right" FontWeight="UltraLight"/>

            <!-- start/stop button -->
            <ToggleButton Grid.Column="4" Name="startStopButton" x:FieldModifier="private" Click="startStopButtonOnClick"/>
        </Grid>
    </Grid>
</UserControl>
